spring.application.name=contabilidad.api
server.servlet.context-path=/contabilidad.api
server.port=8090

## Hibernate
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.hbm2ddl.auto = update
spring.jpa.properties.hibernate.show_sql = true
spring.jpa.properties.hibernate.format_sql = true
spring.jpa.properties.hibernate.use_sql_comments=true


## spring.datasource.platform=postgres
jdbc.driverClassName=org.postgresql.Driver
jdbc.url=jdbc:postgresql://localhost:5432/conta
jdbc.username=postgres
jdbc.password=12345
#spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.url=jdbc:postgresql://localhost:5432/conta
#spring.datasource.username=postgres
#spring.datasource.password=12345

## HikariCP config - spring.datasource.hikari.*
spring.datasource.hikari.pool-name: pool-hikari-reporte
spring.datasource.hikari.maximum-pool-size: 10
spring.datasource.hikari.connection-timeout: 60000

## spring.mvc.pathmatch.matching-strategy = ANT_PATH_MATCHER

#Validar cambios en base de datos
spring.jpa.hibernate.ddl-auto=validate

# Habilitar el logging SQL de Hibernate
spring.jpa.show-sql=true

# Configurar el nivel de logging de Hibernate a DEBUG para ver más detalles
logging.level.org.hibernate=DEBUG
